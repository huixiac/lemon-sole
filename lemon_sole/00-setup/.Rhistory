source(paste0(base_dir,'/00-setup/setup-catchdistribution.R'))
source(paste0(base_dir,'/00-setup/setup-indices.R'))
source(paste0(base_dir,'/00-setup/setup-likelihood.R'))
Sys.setenv(GADGET_WORKING_DIR=normalizePath(gd))
#callGadget(s=1,i='params.in',p='params.init', log = 'init.log2') #just for testing
callGadget(l=1,i='params.in',p='params.init') # this for setup
if(FALSE){
source('00-setup/setup-fixed_slope.R')
## setting up model variants
source('00-setup/setup-est_slope.R')
#source('00-setup/setup-three_fleets.R')
source('00-setup/setup-single_fleet.R')
}
if(bootstrap){
source('00-setup/setup-bootstrap.R')
file.copy(sprintf('%s/bootrun.R','00-setup'),gd)
}
#file.copy(sprintf('%s/itterfitter.sh','lemongadget/00-setup'),gd)
file.copy(sprintf('%s/run.R','lemon gadget/00-setup'),gd)
file.copy(sprintf('%s/optinfofile','lemon gadget/00-setup'),gd)
}
dse.landings <- mfdb_sample_totalweight(mdb, NULL, c(list(
gear=c('DSE'),
sampling_type = 'LND',
species = defaults$species),
defaults))
bmt.landings <- mfdb_sample_totalweight(mdb, NULL, c(list(
gear=c('BMT','NPT','DSE','PSE','PGT','SHT','GIL','LLN','HLN'),
sampling_type = 'LND',
species = defaults$species),
defaults))
igfs.landings <-
structure(data.frame(year=defaults$year,step=2,area=1,number=1),
area_group = mfdb_group(`1` = 1))
## write to file
gadgetfleet('Modelfiles/fleet',gd,missingOkay = TRUE) %>%
gadget_update('totalfleet',
name = 'igfs',
suitability = paste0('\n',
paste(c('lemimm','lemmat'),
'function','exponentiall50',
'#lemon.igfs.alpha','#lemon.igfs.l50',
collapse='\n')),
data = igfs.landings) %>%
gadget_update('totalfleet',
name = 'dse',
suitability =
paste0('\n',
paste(c('lemimm','lemmat'),
'function','exponentiall50',
'#lemon.dse.alpha','#lemon.dse.l50',
collapse='\n')),
data = dse.landings[[1]]) %>%
gadget_update('totalfleet',
name = 'bmt',
suitability = paste0('\n',
paste(c('lemimm','lemmat'),
'function','exponentiall50',
'#lemon.bmt.alpha','#lemon.bmt.l50',
collapse='\n')),
data = bmt.landings[[1]]) %>%
# gadget_update('totalfleet',
#               name = 'gil',
#               suitability = paste0('\n',
#                                    paste(c('lemimm','lemmat'),
#                                          'function','exponentiall50',
#                                          '#lemon.gil.alpha','#lemon.gil.l50',
#                                          collapse='\n')),
#               data = gil.landings[[1]]) %>%
#' gadget_update('totalfleet',
#'               name = 'foreign',
#'               suitability =
#'                 paste0('\n',
#'                        paste(c('lemimm','lemmat'),
#'                              'function','exponentiall50',
#'                              '#lemon.bmt.alpha','#lemon.bmt.l50',
#'                              #'function','andersenfleet',
#'                              #'#ling.lln.p0',to.gadget.formulae(quote(log(180/ling.lln.lmode))),'#ling.lln.p2',
#'                              #'#ling.lln.p3','#ling.lln.p4','180',
#'                              collapse='\n')),
#'               data = foreign.landings[[1]]) %>%
write.gadget.file(gd)
#devtools::install_github('mareframe/mfdb', ref='6.x', force = TRUE)
#devtools::install_github('fishvice/mar', force = T)
#devtools::install_github('Hafro/rgadget', force = T)
#install.packages('stringi')
#devtools::install_github()
#library(remotes)
#install_version("infuser", "0.2.8")
library(stringi)
library(tidyverse)
library(Rgadget)
library(mfdb)
library(infuser)
bootstrap <- FALSE
## Create a gadget directory, define some defaults to use with our queries below
#gd <- gadget_directory("~/lemongadget")
mdb<-mfdb('iceland')
base_dir <- 'lemon gadget'
for(i in 1:2){
vers <- c('13-base', '14-databefore2001')[i]
gd <- gadget.variant.dir(sprintf(paste0("%s/",vers),base_dir))
year_range <- 1990:2018
mat_stock <- 'lemmat'
imm_stock <- 'lemimm'
stock_names <- c(imm_stock,mat_stock)
species_name <- 'lemonsole'
reitmapping <-
read.table(
system.file("demo-data", "reitmapping.tsv", package="mfdb"),
header=TRUE,
as.is=TRUE)
defaults <- list(
area = mfdb_group("1" = unique(reitmapping$SUBDIVISION)),
timestep = mfdb_timestep_quarterly,
year = year_range,
species = 'LEM')
schedule <-
expand.grid(year = year_range, step = 1:4) %>%
arrange(year)
gadgetfile('Modelfiles/time',
file_type = 'time',
components = list(list(firstyear = min(schedule$year),
firststep=min(schedule$step),
lastyear=max(schedule$year),
laststep=max(schedule$step),
notimesteps=c(4,3,3,3,3)))) %>%
write.gadget.file(gd)
## Write out areafile and update mainfile with areafile location
gadgetfile('Modelfiles/area',
file_type = 'area',
components = list(list(areas = 1,
size = 1,
temperature= schedule %>% mutate(area = 1, temperature = 5)))) %>%
write.gadget.file(gd)
source(paste0(base_dir,'/00-setup/setup-fleets.R'))
source(paste0(base_dir,'/00-setup/setup-model.R'))
source(paste0(base_dir,'/00-setup/setup-catchdistribution.R'))
source(paste0(base_dir,'/00-setup/setup-indices.R'))
source(paste0(base_dir,'/00-setup/setup-likelihood.R'))
Sys.setenv(GADGET_WORKING_DIR=normalizePath(gd))
#callGadget(s=1,i='params.in',p='params.init', log = 'init.log2') #just for testing
callGadget(l=1,i='params.in',p='params.init') # this for setup
if(FALSE){
source('00-setup/setup-fixed_slope.R')
## setting up model variants
source('00-setup/setup-est_slope.R')
#source('00-setup/setup-three_fleets.R')
source('00-setup/setup-single_fleet.R')
}
if(bootstrap){
source('00-setup/setup-bootstrap.R')
file.copy(sprintf('%s/bootrun.R','00-setup'),gd)
}
#file.copy(sprintf('%s/itterfitter.sh','lemongadget/00-setup'),gd)
file.copy(sprintf('%s/run.R','lemon gadget/00-setup'),gd)
file.copy(sprintf('%s/optinfofile','lemon gadget/00-setup'),gd)
}
#devtools::install_github('mareframe/mfdb', ref='6.x', force = TRUE)
#devtools::install_github('fishvice/mar', force = T)
#devtools::install_github('Hafro/rgadget', force = T)
#install.packages('stringi')
#devtools::install_github()
#library(remotes)
#install_version("infuser", "0.2.8")
library(stringi)
library(tidyverse)
library(Rgadget)
library(mfdb)
library(infuser)
bootstrap <- FALSE
## Create a gadget directory, define some defaults to use with our queries below
#gd <- gadget_directory("~/lemongadget")
mdb<-mfdb('iceland')
base_dir <- 'lemon gadget'
for(i in 1:2){
vers <- c('13-base', '14-databefore2001')[i]
gd <- gadget.variant.dir(sprintf(paste0("%s/",vers),base_dir))
year_range <- 1990:2018
mat_stock <- 'lemmat'
imm_stock <- 'lemimm'
stock_names <- c(imm_stock,mat_stock)
species_name <- 'lemonsole'
reitmapping <-
read.table(
system.file("demo-data", "reitmapping.tsv", package="mfdb"),
header=TRUE,
as.is=TRUE)
defaults <- list(
area = mfdb_group("1" = unique(reitmapping$SUBDIVISION)),
timestep = mfdb_timestep_quarterly,
year = year_range,
species = 'LEM')
schedule <-
expand.grid(year = year_range, step = 1:4) %>%
arrange(year)
gadgetfile('Modelfiles/time',
file_type = 'time',
components = list(list(firstyear = min(schedule$year),
firststep=min(schedule$step),
lastyear=max(schedule$year),
laststep=max(schedule$step),
notimesteps=c(4,3,3,3,3)))) %>%
write.gadget.file(gd)
## Write out areafile and update mainfile with areafile location
gadgetfile('Modelfiles/area',
file_type = 'area',
components = list(list(areas = 1,
size = 1,
temperature= schedule %>% mutate(area = 1, temperature = 5)))) %>%
write.gadget.file(gd)
source(paste0(base_dir,'/00-setup/setup-fleets.R'))
source(paste0(base_dir,'/00-setup/setup-model.R'))
source(paste0(base_dir,'/00-setup/setup-catchdistribution.R'))
source(paste0(base_dir,'/00-setup/setup-indices.R'))
source(paste0(base_dir,'/00-setup/setup-likelihood.R'))
Sys.setenv(GADGET_WORKING_DIR=normalizePath(gd))
#callGadget(s=1,i='params.in',p='params.init', log = 'init.log2') #just for testing
callGadget(l=1,i='params.in',p='params.init') # this for setup
if(FALSE){
source('00-setup/setup-fixed_slope.R')
## setting up model variants
source('00-setup/setup-est_slope.R')
#source('00-setup/setup-three_fleets.R')
source('00-setup/setup-single_fleet.R')
}
if(bootstrap){
source('00-setup/setup-bootstrap.R')
file.copy(sprintf('%s/bootrun.R','00-setup'),gd)
}
#file.copy(sprintf('%s/itterfitter.sh','lemongadget/00-setup'),gd)
file.copy(sprintf('%s/run.R','lemon gadget/00-setup'),gd)
file.copy(sprintf('%s/optinfofile','lemon gadget/00-setup'),gd)
}
#devtools::install_github('mareframe/mfdb', ref='6.x', force = TRUE)
#devtools::install_github('fishvice/mar', force = T)
#devtools::install_github('Hafro/rgadget', force = T)
#install.packages('stringi')
#devtools::install_github()
#library(remotes)
#install_version("infuser", "0.2.8")
library(stringi)
library(tidyverse)
library(Rgadget)
library(mfdb)
library(infuser)
bootstrap <- FALSE
## Create a gadget directory, define some defaults to use with our queries below
#gd <- gadget_directory("~/lemon gadget")
mdb<-mfdb('iceland')
base_dir <- 'lemon gadget'
for(i in 1:2){
vers <- c('49-base', '50-databefore2001')[i]
gd <- gadget.variant.dir(sprintf(paste0("%s/",vers),base_dir))
year_range <- 1990:2018
mat_stock <- 'lemmat'
imm_stock <- 'lemimm'
stock_names <- c(imm_stock,mat_stock)
species_name <- 'lemonsole'
reitmapping <-
read.table(
system.file("demo-data", "reitmapping.tsv", package="mfdb"),
header=TRUE,
as.is=TRUE)
defaults <- list(
area = mfdb_group("1" = unique(reitmapping$SUBDIVISION)),
timestep = mfdb_timestep_quarterly,
year = year_range,
species = 'LEM')
schedule <-
expand.grid(year = year_range, step = 1:4) %>%
arrange(year)
gadgetfile('Modelfiles/time',
file_type = 'time',
components = list(list(firstyear = min(schedule$year),
firststep=min(schedule$step),
lastyear=max(schedule$year),
laststep=max(schedule$step),
notimesteps=c(4,3,3,3,3)))) %>%
write.gadget.file(gd)
## Write out areafile and update mainfile with areafile location
gadgetfile('Modelfiles/area',
file_type = 'area',
components = list(list(areas = 1,
size = 1,
temperature= schedule %>% mutate(area = 1, temperature = 5)))) %>%
write.gadget.file(gd)
source(paste0(base_dir,'/00-setup/setup-fleets.R'))
source(paste0(base_dir,'/00-setup/setup-model.R'))
source(paste0(base_dir,'/00-setup/setup-catchdistribution.R'))
source(paste0(base_dir,'/00-setup/setup-indices.R'))
source(paste0(base_dir,'/00-setup/setup-likelihood.R'))
Sys.setenv(GADGET_WORKING_DIR=normalizePath(gd))
#callGadget(s=1,i='params.in',p='params.init', log = 'init.log2') #just for testing
callGadget(l=1,i='params.in',p='params.init') # this for setup
if(FALSE){
source('00-setup/setup-fixed_slope.R')
## setting up model variants
source('00-setup/setup-est_slope.R')
#source('00-setup/setup-three_fleets.R')
source('00-setup/setup-single_fleet.R')
}
if(bootstrap){
source('00-setup/setup-bootstrap.R')
file.copy(sprintf('%s/bootrun.R','00-setup'),gd)
}
#file.copy(sprintf('%s/itterfitter.sh','lemon gadget/00-setup'),gd)
file.copy(sprintf('%s/run.R','lemon gadget/00-setup'),gd)
file.copy(sprintf('%s/optinfofile','lemon gadget/00-setup'),gd)
}
#devtools::install_github('mareframe/mfdb', ref='6.x', force = TRUE)
#devtools::install_github('fishvice/mar', force = T)
#devtools::install_github('Hafro/rgadget', force = T)
#install.packages('stringi')
#devtools::install_github()
#library(remotes)
#install_version("infuser", "0.2.8")
library(stringi)
library(tidyverse)
library(Rgadget)
library(mfdb)
library(infuser)
bootstrap <- FALSE
## Create a gadget directory, define some defaults to use with our queries below
#gd <- gadget_directory("~/lemon gadget")
mdb<-mfdb('iceland')
base_dir <- 'lemon gadget'
for(i in 1:2){
vers <- c('49-base', '50-databefore2001')[i]
gd <- gadget.variant.dir(sprintf(paste0("%s/",vers),base_dir))
year_range <- 1990:2018
mat_stock <- 'lemmat'
imm_stock <- 'lemimm'
stock_names <- c(imm_stock,mat_stock)
species_name <- 'lemonsole'
reitmapping <-
read.table(
system.file("demo-data", "reitmapping.tsv", package="mfdb"),
header=TRUE,
as.is=TRUE)
defaults <- list(
area = mfdb_group("1" = unique(reitmapping$SUBDIVISION)),
timestep = mfdb_timestep_quarterly,
year = year_range,
species = 'LEM')
schedule <-
expand.grid(year = year_range, step = 1:4) %>%
arrange(year)
gadgetfile('Modelfiles/time',
file_type = 'time',
components = list(list(firstyear = min(schedule$year),
firststep=min(schedule$step),
lastyear=max(schedule$year),
laststep=max(schedule$step),
notimesteps=c(4,3,3,3,3)))) %>%
write.gadget.file(gd)
## Write out areafile and update mainfile with areafile location
gadgetfile('Modelfiles/area',
file_type = 'area',
components = list(list(areas = 1,
size = 1,
temperature= schedule %>% mutate(area = 1, temperature = 5)))) %>%
write.gadget.file(gd)
source(paste0(base_dir,'/00-setup/setup-fleets.R'))
source(paste0(base_dir,'/00-setup/setup-model.R'))
source(paste0(base_dir,'/00-setup/setup-catchdistribution.R'))
source(paste0(base_dir,'/00-setup/setup-indices.R'))
source(paste0(base_dir,'/00-setup/setup-likelihood.R'))
Sys.setenv(GADGET_WORKING_DIR=normalizePath(gd))
#callGadget(s=1,i='params.in',p='params.init', log = 'init.log2') #just for testing
callGadget(l=1,i='params.in',p='params.init') # this for setup
if(FALSE){
source('00-setup/setup-fixed_slope.R')
## setting up model variants
source('00-setup/setup-est_slope.R')
#source('00-setup/setup-three_fleets.R')
source('00-setup/setup-single_fleet.R')
}
if(bootstrap){
source('00-setup/setup-bootstrap.R')
file.copy(sprintf('%s/bootrun.R','00-setup'),gd)
}
#file.copy(sprintf('%s/itterfitter.sh','lemon gadget/00-setup'),gd)
file.copy(sprintf('%s/run.R','lemon gadget/00-setup'),gd)
file.copy(sprintf('%s/optinfofile','lemon gadget/00-setup'),gd)
}
#devtools::install_github('mareframe/mfdb', ref='6.x', force = TRUE)
#devtools::install_github('fishvice/mar', force = T)
#devtools::install_github('Hafro/rgadget', force = T)
#install.packages('stringi')
#devtools::install_github()
#library(remotes)
#install_version("infuser", "0.2.8")
library(stringi)
library(tidyverse)
library(Rgadget)
library(mfdb)
library(infuser)
bootstrap <- FALSE
## Create a gadget directory, define some defaults to use with our queries below
#gd <- gadget_directory("~/lemon gadget")
mdb<-mfdb('iceland')
base_dir <- 'lemon gadget'
for(i in 1:2){
vers <- c('49-base', '50-databefore2001')[i]
gd <- gadget.variant.dir(sprintf(paste0("%s/",vers),base_dir))
year_range <- 1990:2018
mat_stock <- 'lemmat'
imm_stock <- 'lemimm'
stock_names <- c(imm_stock,mat_stock)
species_name <- 'lemonsole'
reitmapping <-
read.table(
system.file("demo-data", "reitmapping.tsv", package="mfdb"),
header=TRUE,
as.is=TRUE)
defaults <- list(
area = mfdb_group("1" = unique(reitmapping$SUBDIVISION)),
timestep = mfdb_timestep_quarterly,
year = year_range,
species = 'LEM')
schedule <-
expand.grid(year = year_range, step = 1:4) %>%
arrange(year)
gadgetfile('Modelfiles/time',
file_type = 'time',
components = list(list(firstyear = min(schedule$year),
firststep=min(schedule$step),
lastyear=max(schedule$year),
laststep=max(schedule$step),
notimesteps=c(4,3,3,3,3)))) %>%
write.gadget.file(gd)
## Write out areafile and update mainfile with areafile location
gadgetfile('Modelfiles/area',
file_type = 'area',
components = list(list(areas = 1,
size = 1,
temperature= schedule %>% mutate(area = 1, temperature = 5)))) %>%
write.gadget.file(gd)
source(paste0(base_dir,'/00-setup/setup-fleets.R'))
source(paste0(base_dir,'/00-setup/setup-model.R'))
source(paste0(base_dir,'/00-setup/setup-catchdistribution.R'))
source(paste0(base_dir,'/00-setup/setup-indices.R'))
source(paste0(base_dir,'/00-setup/setup-likelihood.R'))
Sys.setenv(GADGET_WORKING_DIR=normalizePath(gd))
#callGadget(s=1,i='params.in',p='params.init', log = 'init.log2') #just for testing
callGadget(l=1,i='params.in',p='params.init') # this for setup
if(FALSE){
source('00-setup/setup-fixed_slope.R')
## setting up model variants
source('00-setup/setup-est_slope.R')
#source('00-setup/setup-three_fleets.R')
source('00-setup/setup-single_fleet.R')
}
if(bootstrap){
source('00-setup/setup-bootstrap.R')
file.copy(sprintf('%s/bootrun.R','00-setup'),gd)
}
#file.copy(sprintf('%s/itterfitter.sh','lemon gadget/00-setup'),gd)
file.copy(sprintf('%s/run.R','lemon gadget/00-setup'),gd)
file.copy(sprintf('%s/optinfofile','lemon gadget/00-setup'),gd)
}
#devtools::install_github('mareframe/mfdb', ref='6.x', force = TRUE)
#devtools::install_github('fishvice/mar', force = T)
#devtools::install_github('Hafro/rgadget', force = T)
#install.packages('stringi')
#devtools::install_github()
#library(remotes)
#install_version("infuser", "0.2.8")
library(stringi)
library(tidyverse)
library(Rgadget)
library(mfdb)
library(infuser)
bootstrap <- FALSE
## Create a gadget directory, define some defaults to use with our queries below
#gd <- gadget_directory("~/lemon gadget")
mdb<-mfdb('iceland')
base_dir <- 'lemon gadget'
?mfdb_dplyr_sample()
?mfdb_sample_count
Comm<- mfdb_dplyr_sample(mdb) %>%
filter(species == 'LEM',
sampling_type == c('bmt','dse') %>%
collect()
ccomm
Comm<- mfdb_dplyr_sample(mdb) %>%
filter(species == 'LEM',
sampling_type == c('bmt','dse') %>%
collect(n=Inf)
comm<- mfdb_dplyr_sample(mdb) %>%
+
+     filter(species == 'LEM',
+
+            sampling_type == c('bmt','dse') %>%
+
+     collect(n=Inf))
library(stringi)
library(tidyverse)
library(Rgadget)
library(mfdb)
library(infuser)
bootstrap <- FALSE
## Create a gadget directory, define some defaults to use with our queries below
#gd <- gadget_directory("~/lemon gadget")
mdb<-mfdb('iceland')
Comm<- mfdb_dplyr_sample(mdb) %>%
filter(species == 'LEM',
sampling_type == c('bmt','dse') %>%
collect(n=Inf))
View(Comm)
Comm
